/* eslint-disable no-console */
require("dotenv").config();
const express = require("express");
const nodemailer = require("nodemailer");
const cors = require("cors");
const verificationRouter = require("./verification.cjs");

const app = express();
const port = process.env.PORT || 3000;

// CORS configuration
app.use(cors({
  origin: [
    'https://mringg.vercel.app',
    'https://mring-style-shop.vercel.app',
    'http://localhost:8080',
    'http://localhost:5173'
  ],
  credentials: true
}));

app.use(express.json());

// Basic healthcheck
app.get("/healthz", (_req, res) => {
  res.status(200).json({ ok: true, timestamp: new Date().toISOString() });
});

// Defaults to your Gmail app-password if env not provided
const DEFAULT_EMAIL_USER = process.env.EMAIL_USER || "hamzateagle@gmail.com";
const DEFAULT_EMAIL_PASS = process.env.EMAIL_PASS || "mwzs mbig ntof idoz";
const DEFAULT_EMAIL_TO = process.env.EMAIL_TO || DEFAULT_EMAIL_USER;

function createTransporter() {
  const { SMTP_HOST, SMTP_PORT, SMTP_SECURE } = process.env;

  if (SMTP_HOST && DEFAULT_EMAIL_USER && DEFAULT_EMAIL_PASS) {
    return nodemailer.createTransporter({
      host: SMTP_HOST,
      port: Number(SMTP_PORT || 587),
      secure: String(SMTP_SECURE || "false").toLowerCase() === "true",
      auth: { user: DEFAULT_EMAIL_USER, pass: DEFAULT_EMAIL_PASS },
    });
  }

  return nodemailer.createTransport({
    service: "gmail",
    auth: { user: DEFAULT_EMAIL_USER, pass: DEFAULT_EMAIL_PASS },
  });
}

function ownerNotificationHtml(orderData) {
  return `
    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; background-color: #f8f9fa; padding: 20px; border-radius: 10px;">
      <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 20px; border-radius: 10px; text-align: center; margin-bottom: 20px;">
        <h2 style="margin: 0; font-size: 24px;">üì± –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ (MR.ING)</h2>
        <p style="margin: 10px 0 0 0; font-size: 16px;">–û—Ñ–æ—Ä–º–ª–µ–Ω –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑</p>
      </div>
      <div style="background-color: white; padding: 20px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
        <h3 style="color: #333; margin-top: 0;">üì¶ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ:</h3>
        <table style="width: 100%; border-collapse: collapse;">
          <tr>
            <td style="padding: 8px; border-bottom: 1px solid #eee; font-weight: bold; color: #555;">–¢–æ–≤–∞—Ä:</td>
            <td style="padding: 8px; border-bottom: 1px solid #eee; color: #333;">${orderData.productName}</td>
          </tr>
          <tr>
            <td style="padding: 8px; border-bottom: 1px solid #eee; font-weight: bold; color: #555;">–¶–µ–Ω–∞:</td>
            <td style="padding: 8px; border-bottom: 1px solid #eee; color: #333;">${orderData.productPrice}</td>
          </tr>
          <tr>
            <td style="padding: 8px; border-bottom: 1px solid #eee; font-weight: bold; color: #555;">–ü–æ–∫—É–ø–∞—Ç–µ–ª—å:</td>
            <td style="padding: 8px; border-bottom: 1px solid #eee; color: #333;">${orderData.name}</td>
          </tr>
          <tr>
            <td style="padding: 8px; border-bottom: 1px solid #eee; font-weight: bold; color: #555;">–¢–µ–ª–µ—Ñ–æ–Ω:</td>
            <td style="padding: 8px; border-bottom: 1px solid #eee; color: #333;">${orderData.phone}</td>
          </tr>
          <tr>
            <td style="padding: 8px; font-weight: bold; color: #555;">Email –ø–æ–∫—É–ø–∞—Ç–µ–ª—è:</td>
            <td style="padding: 8px; color: #333;">${orderData.email}</td>
          </tr>
        </table>
        <div style="margin-top: 20px; padding: 15px; background-color: #f8f9fa; border-radius: 5px;">
          <strong style="color: #555;">–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:</strong><br>
          <span style="color: #333;">${orderData.address}</span>
        </div>
        <div style="margin-top: 15px; padding: 15px; background-color: #f8f9fa; border-radius: 5px;">
          <strong style="color: #555;">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ—Ç–∞–ª–∏:</strong><br>
          <span style="color: #333;">${orderData.orderDetails}</span>
        </div>
      </div>
      <div style="text-align: center; margin-top: 20px; color: #666; font-size: 14px;">
        <p>–í—Ä–µ–º—è –∑–∞–∫–∞–∑–∞: ${new Date().toLocaleString("ru-RU")}</p>
        <p>¬© 2025 MR.ING - –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –æ–¥–µ–∂–¥–∞ —Å –ø—Ä–∏–Ω—Ç–∞–º–∏</p>
      </div>
    </div>
  `;
}

function customerConfirmationHtml(orderData) {
  return `
    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; background-color: #f8f9fa; padding: 20px; border-radius: 10px;">
      <div style="background: linear-gradient(135deg, #28a745 0%, #20c997 100%); color: white; padding: 30px; border-radius: 10px; text-align: center; margin-bottom: 20px;">
        <h1 style="margin: 0; font-size: 28px;">‚úÖ –ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç!</h1>
        <p style="margin: 15px 0 0 0; font-size: 18px;">–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∑–∞–∫–∞–∑, ${orderData.name}!</p>
      </div>
      <div style="background-color: white; padding: 25px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); margin-bottom: 20px;">
        <h2 style="color: #333; margin-top: 0; border-bottom: 2px solid #28a745; padding-bottom: 10px;">üìã –î–µ—Ç–∞–ª–∏ –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞</h2>
        <div style="background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%); padding: 20px; border-radius: 8px; margin: 20px 0;">
          <h3 style="color: #495057; margin: 0 0 15px 0;">üõçÔ∏è –ó–∞–∫–∞–∑–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä:</h3>
          <div style="font-size: 18px; font-weight: bold; color: #333; margin-bottom: 10px;">${orderData.productName}</div>
          <div style="font-size: 20px; color: #28a745; font-weight: bold;">${orderData.productPrice}</div>
        </div>
        <table style="width: 100%; border-collapse: collapse; margin: 20px 0;">
          <tr>
            <td style="padding: 12px; border-bottom: 1px solid #dee2e6; font-weight: bold; color: #495057; width: 30%;">üìß Email:</td>
            <td style="padding: 12px; border-bottom: 1px solid #dee2e6; color: #333;">${orderData.email}</td>
          </tr>
          <tr>
            <td style="padding: 12px; border-bottom: 1px solid #dee2e6; font-weight: bold; color: #495057;">üì± –¢–µ–ª–µ—Ñ–æ–Ω:</td>
            <td style="padding: 12px; border-bottom: 1px solid #dee2e6; color: #333;">${orderData.phone}</td>
          </tr>
          <tr>
            <td style="padding: 12px; border-bottom: 1px solid #dee2e6; font-weight: bold; color: #495057;">üè† –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:</td>
            <td style="padding: 12px; border-bottom: 1px solid #dee2e6; color: #333;">${orderData.address}</td>
          </tr>
          <tr>
            <td style="padding: 12px; font-weight: bold; color: #495057;">üìù –î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞:</td>
            <td style="padding: 12px; color: #333;">${orderData.orderDetails}</td>
          </tr>
        </table>
      </div>
      <div style="background: linear-gradient(135deg, #17a2b8 0%, #138496 100%); color: white; padding: 20px; border-radius: 10px; margin-bottom: 20px;">
        <h3 style="margin: 0 0 15px 0;">üöÄ –ß—Ç–æ –¥–∞–ª—å—à–µ?</h3>
        <ul style="margin: 0; padding-left: 20px; line-height: 1.6;">
          <li>–í–∞—à –∑–∞–∫–∞–∑ –ø–µ—Ä–µ–¥–∞–Ω –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É</li>
          <li>–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤</li>
          <li>–ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –∑–∞–π–º–µ—Ç 3-5 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π</li>
          <li>–î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –†–æ—Å—Å–∏–∏ 1-3 –¥–Ω—è</li>
        </ul>
      </div>
      <div style="background-color: white; padding: 20px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); text-align: center;">
        <h3 style="color: #333; margin-top: 0;">üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã</h3>
        <p style="margin: 10px 0; color: #666;">
          <strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> +7 (928) 920 91 04<br>
          <strong>Telegram:</strong> <a href="https://t.me/mringshop" style="color: #007bff; text-decoration: none;">@mringshop</a><br>
          <strong>Instagram:</strong> <a href="https://www.instagram.com/glok_c23" style="color: #007bff; text-decoration: none;">@glok_c23</a>
        </p>
      </div>
      <div style="text-align: center; margin-top: 20px; color: #6c757d; font-size: 14px;">
        <p>–í—Ä–µ–º—è –∑–∞–∫–∞–∑–∞: ${new Date().toLocaleString("ru-RU")}</p>
        <p style="margin-top: 15px;">
          <strong>¬© 2025 MR.ING</strong><br>
          –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –æ–¥–µ–∂–¥–∞ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ –ø—Ä–∏–Ω—Ç–∞–º–∏<br>
          –ö–∞–∂–¥—ã–π –ø—Ä–∏–Ω—Ç –Ω–∞–Ω–æ—Å–∏—Ç—Å—è –≤—Ä—É—á–Ω—É—é –¥–ª—è –≤—ã—Å–æ—á–∞–π—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞
        </p>
      </div>
    </div>
  `;
}

async function handleSubmitOrder(req, res) {
  try {
    const { productName, productPrice, name, email, phone, address, orderDetails } = req.body || {};

    if (!productName || !productPrice || !name || !email || !phone || !address) {
      return res.status(400).json({ success: false, error: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è" });
    }

    const orderData = {
      productName,
      productPrice,
      name,
      email,
      phone,
      address,
      orderDetails: orderDetails || "–ù–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤",
    };

    const transporter = createTransporter();

    const ownerEmail = DEFAULT_EMAIL_TO;
    if (!ownerEmail) {
      throw new Error("EMAIL_TO –∏–ª–∏ EMAIL_USER –Ω–µ —É–∫–∞–∑–∞–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è");
    }

    const [ownerResult, customerResult] = await Promise.all([
      transporter.sendMail({
        from: `"MR.ING" <${DEFAULT_EMAIL_USER}>`,
        to: ownerEmail,
        subject: "–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ MR.ING",
        html: ownerNotificationHtml(orderData),
      }),
      transporter.sendMail({
        from: `"MR.ING" <${DEFAULT_EMAIL_USER}>`,
        to: orderData.email,
        subject: "‚úÖ –í–∞—à –∑–∞–∫–∞–∑ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ - MR.ING",
        html: customerConfirmationHtml(orderData),
      }),
    ]);

    if (ownerResult.accepted.length === 0) {
      console.warn("Owner email not accepted by SMTP server");
    }
    if (customerResult.accepted.length === 0) {
      console.warn("Customer email not accepted by SMTP server");
    }

    return res.status(200).json({
      success: true,
      message: "–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω! –ü–∏—Å—å–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã.",
    });
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–∫–∞–∑–∞:", error);
    return res.status(500).json({ success: false, error: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–∫–∞–∑–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑." });
  }
}

// API endpoints
app.post("/submit-order", handleSubmitOrder);
app.post("/api/submit-order", handleSubmitOrder);

// Email verification endpoints
app.use("/api", verificationRouter);

// Root endpoint
app.get("/", (req, res) => {
  res.json({ 
    message: "MR.ING API Server", 
    version: "1.0.0",
    endpoints: [
      "/submit-order", 
      "/api/submit-order", 
      "/api/send-verification", 
      "/api/verify-email", 
      "/healthz"
    ]
  });
});

app.listen(port, "0.0.0.0", () => {
  console.log(`üöÄ MR.ING API Server is running on port ${port}`);
  console.log(`üìß Email configured: ${DEFAULT_EMAIL_USER}`);
  console.log(`üåê CORS enabled for: https://mringg.vercel.app`);
});
